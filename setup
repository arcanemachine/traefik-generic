#!/bin/sh

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
	echo "A one-stop script to set up the environment for this project. It generates 4 files:
  - './.env' - The local environment (automatically detected by the Compose file)
  - './etc/traefik.yml' - Traefik configuration file
  - './start.sh' - A script that starts the container service

Accepted Arguments:
  - First positional argument (required): The name of the environment to set up.
    - Accepts: local, remote
  - Second positional argument (optional): Force overwrite existing files.
    - Accepts: -f, --force

Script Mode:
  - To bypass manual entry, set SCRIPT_MODE=1 before running this script and pass the required environment variables manually:
    'local' mode: TRAEFIK_HOST
    'remote' mode: TRAEFIK_HOST, LETS_ENCRYPT_EMAIL
"
	exit 0
fi

## SETUP ##

# default values
container_network_name="traefik-global-proxy"
default_traefik_host="localhost"
default_lets_encrypt_email="letsencrypt@example.com"

# navigate to project root directory
cd "$(dirname "$0")" || exit 1

# get environment choice: 'local' or 'remote'
if [ "$1" = "local" ]; then
	env_choice="local"

	# check for required environment variables if using SCRIPT_MODE
	if [ "$SCRIPT_MODE" = 1 ]; then
		if [ "${TRAEFIK_HOST:-}" = "" ]; then
			echo "\033[91mYou are attempting to set up a 'local' environment in SCRIPT_MODE, but TRAEFIK_HOST is not set. Aborting...\033[39m"
			exit 1
		fi
	fi

elif [ "$1" = "remote" ]; then
	env_choice="remote"

	# check for required environment variables if using SCRIPT_MODE
	if [ "$SCRIPT_MODE" = 1 ]; then
		if [ "${TRAEFIK_HOST:-}" = "" ]; then
			echo "\033[91mYou are attempting to set up a 'remote' environment in SCRIPT_MODE, but TRAEFIK_HOST is not set. This script will fail.\033[39m"
			will_exit_with_error=1
		fi

		if [ "${LETS_ENCRYPT_EMAIL:-}" = "" ]; then
			echo "\033[91mYou are attempting to set up a 'remote' environment in SCRIPT_MODE, but LETS_ENCRYPT_EMAIL is not set. This script will fail.\033[39m"
			will_exit_with_error=1
		fi

		# exit here so we can see all error messages
		if [ "$will_exit_with_error" = 1 ]; then
			echo "\033[91mAborting...\033[39m"
			exit 1
		fi
	fi

else
	echo "First positional argument must be one of: local, remote"
	exit 1
fi

# check for existing .env values
if [ -f ".env" ]; then
	# source dotenv
	echo "Importing existing environment from '.env'..."
	set -o allexport
	# shellcheck disable=SC1091
	. ./.env
	set +o allexport
else
	echo "Could not find existing environment at '.env'. A new one will be created."
fi

# docker/podman config (and notification)
if [ "$USE_PODMAN" = 1 ]; then
	printf "\nConfiguring this service for Podman...\n"

	# create podman network
	if podman network create $container_network_name >/dev/null 2>&1; then
		echo "Podman network '$container_network_name' created successfully"
	else
		echo "Podman network '$container_network_name' already exists"
	fi

else
	printf "\nConfiguring this service for Docker. To configure this service for use with Podman, set USE_PODMAN=1 before running this script.\n"

	# create docker network
	if docker network create $container_network_name >/dev/null 2>&1; then
		echo "Docker network '$container_network_name' created successfully"
	else
		echo "Docker network '$container_network_name' already exists"
	fi

fi

# check if overwrite/force mode is enabled (also is enabled in SCRIPT_MODE) #
if [ "$2" = "-f" ] || [ "$2" = "--force" ] || [ "$SCRIPT_MODE" = 1 ]; then
	printf "\nForce mode enabled. Any existing files will be overwritten.\n"
	force_mode=1
fi

echo ""

## MAIN ##

# .env #
# check for existing '.env' file
if [ -f ".env" ] && [ "$force_mode" != 1 ]; then

	# show warning and skip '.env' file generation
	echo "\033[93mFile '.env' already exists. Delete the file, or enable 'force' mode by passing '-f' or '--force' as the second positional argument. Skipping...\033[39m"

else

	echo "\033[96mGenerating file './.env'...\033[39m"

	# traefik_host

	if [ "$SCRIPT_MODE" = 1 ]; then
		# bypass manual entry
		traefik_host="${TRAEFIK_HOST:-}"

	# check if TRAEFIK_HOST already exists
	elif [ "$TRAEFIK_HOST" != "" ]; then

		while [ "$keep_existing_traefik_host" != "y" ] && [ "$keep_existing_traefik_host" != "n" ]; do

			# check if the user wants to use the existing value
			printf "TRAEFIK_HOST dashboard hostname is set to '%s'. Do you want to use this value? (Y/n) " "$TRAEFIK_HOST"
			read -r keep_existing_traefik_host

			# convert blank space to 'y'
			if [ "$keep_existing_traefik_host" = "" ]; then
				keep_existing_traefik_host="y"
			fi

		done

		if [ "$keep_existing_traefik_host" = "y" ]; then
			# use existing value
			traefik_host="$TRAEFIK_HOST"
		fi
	fi

	# if 'traefik_host' is still empty (and we aren't in script mode),
	# get the user to set it now
	if [ "$traefik_host" = "" ] && [ "$SCRIPT_MODE" != 1 ]; then
		printf "Enter the desired hostname for the TRAEFIK_HOST dashboard (default: '%s'): " "$default_traefik_host"
		read -r traefik_host

		if [ "$traefik_host" = "" ]; then
			traefik_host="$default_traefik_host"
			echo "Using default value '${default_traefik_host}' for TRAEFIK_HOST..."
		else
			echo "Using custom value '${traefik_host}' for TRAEFIK_HOST..."
		fi
	fi

	# generate '.env' file and set restrictive permissions
	TRAEFIK_HOST="$traefik_host" ./templates/dotenv.GENERATOR >.env
	chmod 600 .env
fi

# traefik.yml #
# check for existing 'traefik.yml' file
if [ -f "./etc/traefik.yml" ] && [ "$force_mode" != 1 ]; then

	# show warning and skip 'traefik.yml' file generation
	echo "\033[93mFile 'etc/traefik.yml' already exists. Delete the file, or enable 'force' mode by passing '-f' or '--force' as the second positional argument. Skipping...\033[39m"

else

	# maybe generate email for Let's Encrypt email reminders
	if [ "$SCRIPT_MODE" = 1 ]; then
		# bypass manual entry
		lets_encrypt_email="${LETS_ENCRYPT_EMAIL:-}"

	elif [ "$env_choice" = "remote" ]; then

		lets_encrypt_email=""

		# check if LETS_ENCRYPT_EMAIL already exists
		if [ "$lets_encrypt_email" != "" ]; then

			while [ "$keep_existing_lets_encrypt_email" != "y" ] && [ "$keep_existing_lets_encrypt_email" != "n" ]; do
				# check if the user wants to use the existing value
				printf "LETS_ENCRYPT_EMAIL is set to '%s'. Do you want to use this value? (Y/n) " "$LETS_ENCRYPT_EMAIL"
				read -r keep_existing_lets_encrypt_email

				# convert blank space to 'y'
				if [ "$keep_existing_lets_encrypt_email" = "" ]; then
					keep_existing_lets_encrypt_email="y"
				fi

			done

			if [ "$keep_existing_lets_encrypt_email" = "y" ]; then
				# use existing value
				lets_encrypt_email="$LETS_ENCRYPT_EMAIL"
			fi
		fi

		# if 'lets_encrypt_email' is still empty (and we aren't in script mode),
		# get the user to set it now
		if [ "$lets_encrypt_email" = "" ] && [ "$SCRIPT_MODE" != 1 ]; then
			printf "Enter the desired value for LETS_ENCRYPT_EMAIL (default: '%s'): " "$default_lets_encrypt_email"
			read -r lets_encrypt_email

			if [ "$lets_encrypt_email" = "" ]; then
				lets_encrypt_email="$default_lets_encrypt_email"
				echo "Using default value '${default_lets_encrypt_email}' for LETS_ENCRYPT_EMAIL..."
			else
				echo "Using custom value '${lets_encrypt_email}' for LETS_ENCRYPT_EMAIL..."
			fi
		fi

	fi

	# generate 'traefik.yml'
	echo "\033[96mGenerating file './etc/traefik.yml'...\033[39m"
	LETS_ENCRYPT_EMAIL="$lets_encrypt_email" ./templates/traefik.yml.GENERATOR "$env_choice" >./etc/traefik.yml

fi

# start.sh #
# check for existing 'traefik.yml' file
if [ -f "start.sh" ] && [ "$force_mode" != 1 ]; then

	# show warning and skip 'start.sh' file generation
	echo "\033[93mFile 'start.sh' already exists. Delete the file, or enable 'force' mode by passing '-f' or '--force' as the second positional argument. Skipping...\033[39m"

else

	echo "\033[96mGenerating file './start.sh'...\033[39m"

	# create the file and add execute permissions
	./templates/start.sh.GENERATOR "$env_choice" >start.sh
	chmod +x start.sh

fi

# compose.yaml #
