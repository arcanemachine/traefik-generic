#!/bin/sh

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
	echo "Generate a 'traefik.yml' file for a 'dev' or 'prod' environment.

Configuration:
  - The 'dev' environment has no configuration options.
  - To configure the 'prod' environment:
    - To generate the default template, pass the '--default' flag as the first positional argument.
    - Available variable(s):
      - LETS_ENCRYPT_EMAIL: Your email address (used to receive important emails from Let's Encrypt)
        - default: 'letsencrypt@example.com'"

	exit
fi

if [ "$1" != "dev" ] && [ "$1" != "prod" ]; then

	# show error message and exit
	echo "First positional argument must be one of: dev, prod"
	exit 1

elif [ "$1" = "dev" ]; then

	echo "---
global:
  sendAnonymousUsage: false
  checkNewVersion: false

log:
  level: \"DEBUG\"

api:
  dashboard: true

providers:
  docker:
    exposedByDefault: false
    network: \"traefik-global-proxy\"
  file:
    directory: \"/etc/traefik\"

entryPoints:
  web:
    address: \":80\"

pilot:
  dashboard: false"

elif
	[ "$1" = "prod" ]
then

	# lets_encrypt_email
	lets_encrypt_email="${LETS_ENCRYPT_EMAIL:-}"
	if [ "$lets_encrypt_email" = "" ] || [ "$1" = "--default" ]; then
		lets_encrypt_email="letsencrypt@example.com"
	fi

	echo "---
global:
  sendAnonymousUsage: false
  checkNewVersion: false

log:
  level: \"DEBUG\"

api:
  dashboard: true

providers:
  docker:
    exposedByDefault: false
    network: \"traefik-global-proxy\"
  file:
    directory: \"/etc/traefik\"

entryPoints:
  web:
    address: \":80\"
    http:
      redirections:
        entryPoint:
          to: \"websecure\"
          scheme: \"https\"
  websecure:
    address: \":443\"

certificatesResolvers:
  letsencrypt:
    acme:
      email: \"${lets_encrypt_email}\"
      storage: \"/letsencrypt/acme.json\"
      tlsChallenge: {}

pilot:
  dashboard: false"

fi
